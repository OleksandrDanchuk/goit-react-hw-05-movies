{"version":3,"file":"static/js/736.2e5ff0e4.chunk.js","mappings":"2NACA,EAAsB,sB,SCATA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,8BACGA,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,2BACE,gBACEC,UAAWC,EACXC,IACEH,EAAY,yCAC0BA,GAD1B,gFAIdI,IAAKL,KAEP,uBAAIA,KACJ,uCAAeD,OAXRD,EAcZ,KAGN,E,kBClBKQ,EAAgB,I,OAAIC,GAiC1B,EA/Ba,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOd,EAAP,KAAae,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,+GAIFP,EAAcQ,UAAUN,GAJtB,gBAGFZ,EAHE,EAGVmB,KAAQnB,KAEVe,EAAQf,GALI,gDAOZoB,QAAQC,IAAR,MAPY,yDAAH,qDAUbJ,GACD,GAAE,CAACL,KAGF,8BACGZ,EAAKsB,QACJ,yBACE,SAACvB,EAAD,CAAUC,KAAMA,OAGlB,qEAIP,C,qFClCYW,EAAb,kFAIE,WACE,OAAOY,EAAAA,EAAAA,IAAA,UACFZ,EAAca,IADZ,sCAC6Cb,EAAcc,KAEnE,GARH,0BASE,SAAaC,GACX,OAAOH,EAAAA,EAAAA,IAAA,UACFZ,EAAca,IADZ,gCACuCb,EAAcc,IADrD,iCACiFC,GAEzF,GAbH,0BAcE,SAAad,GACX,OAAOW,EAAAA,EAAAA,IAAA,UACFZ,EAAca,IADZ,iBACwBZ,EADxB,oBAC2CD,EAAcc,IADzD,mBAGR,GAlBH,0BAmBE,SAAab,GACX,OAAOW,EAAAA,EAAAA,IAAA,UACFZ,EAAca,IADZ,iBACwBZ,EADxB,4BACmDD,EAAcc,IADjE,mBAGR,GAvBH,uBAwBE,SAAUb,GACR,OAAOW,EAAAA,EAAAA,IAAA,UACFZ,EAAca,IADZ,iBACwBZ,EADxB,4BACmDD,EAAcc,IADjE,mBAGR,KA5BH,KAAad,EACJa,IAAM,gCADFb,EAEJc,IAAM,kC","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","components/Cast/Cast.jsx","requestServer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"CastList_img__53y+T\"};","import css from './CastList.module.css';\nexport const CastList = ({ cast }) => {\n  return (\n    <>\n      {cast.map(({ id, character, name, profile_path }) => {\n        return (\n          <li key={id}>\n            <img\n              className={css.img}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : `https://cdn.pixabay.com/photo/2016/12/14/23/08/page-not-found-1907792_150.jpg`\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        );\n      })}\n    </>\n  );\n};\n","import { CastList } from 'components/CastList/CastList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RequestServer } from 'requestServer';\n\nconst requestServer = new RequestServer();\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const {\n          data: { cast },\n        } = await requestServer.movieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length ? (\n        <ul>\n          <CastList cast={cast} />\n        </ul>\n      ) : (\n        <p>We don't have any acteurs for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport class RequestServer {\n  static url = 'https://api.themoviedb.org/3/';\n  static key = 'e15edd35c54887c8dc09a01586e49374';\n\n  trendingDay() {\n    return axios.get(\n      `${RequestServer.url}trending/movie/day?api_key=${RequestServer.key}`\n    );\n  }\n  searchMovies(value) {\n    return axios.get(\n      `${RequestServer.url}search/movie?api_key=${RequestServer.key}&language=en-US&query=${value}`\n    );\n  }\n  movieDetails(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieReviews(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/reviews?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n  movieCast(movieId) {\n    return axios.get(\n      `${RequestServer.url}movie/${movieId}/credits?api_key=${RequestServer.key}&language=en-US`\n    );\n  }\n}\n"],"names":["CastList","cast","map","id","character","name","profile_path","className","css","src","alt","requestServer","RequestServer","movieId","useParams","useState","setCast","useEffect","getCast","movieCast","data","console","log","length","axios","url","key","value"],"sourceRoot":""}